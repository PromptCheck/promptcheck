# âœ… This is a minimal LLM prompt test. It checks if the assistant greets the user politely.

- id: "openrouter_greet_test_001"  # Unique identifier for this test case (optional but recommended)
  name: "Prompt responds with a polite greeting" # Human-readable name for the test
  description: "Tests a basic greeting prompt using a free model on OpenRouter (Mistral 7B Instruct)." # Optional description
  type: "llm_generation" # Type of test, currently supports "llm_generation"

  input_data: # Defines the input to the LLM
    prompt: "Briefly introduce yourself and greet the user." # The prompt text

  expected_output: # Defines expected outcomes for evaluation
    regex_pattern: "(?i)(hello|hi|hey|greetings)" # Case-insensitive match for common greetings

  metric_configs: # List of metrics to apply to the LLM's output
    - metric: "regex_match" # Specifies the regex_match metric. Uses regex_pattern from expected_output.
    - metric: "token_count" # Specifies the token_count metric
      parameters: # Optional parameters for the metric
        count_types: ["completion", "total"] # Types of token counts to report
    - metric: "latency" # Specifies the latency metric
      threshold: # Optional: defines pass/fail criteria for this metric
        value: 10000 # Maximum allowed latency in milliseconds
        operator: "<=" # Test passes if actual latency is less than or equal to this value
    - metric: "cost" # Specifies the cost metric
      # No threshold for cost in this example; it will just be reported.
      # OpenRouter may provide cost via headers for some models.

  case_model_config:
    provider: "openrouter"
    model_name: "mistralai/mistral-7b-instruct" # Free model for testing
    # model_name: "google/gemini-flash-1.5" # Also free
    parameters:
      temperature: 0.7
      max_tokens: 50
      # timeout_s: 10 # Example of overriding provider default
      # retry_attempts: 1 # Example of overriding provider default
  # Requires OPENROUTER_API_KEY in environment or promptcheck.config.yaml.

  tags: ["openrouter", "free_model", "basic_example", "greeting"] # Optional tags for filtering/grouping tests 